
openapi: "3.0.0"
info:
  version: 0.1.0
  title: User Mangement
  description: API Gateway를 사용전 까지는 HeaderFilter를 추가해서 Token 유효성확인 Json naming convention은 (_)를 사용한다. e.g.) user_name
servers:
  - url: http://127.0.0.1:8080
    description: 로컬서버
  - url: https://user.dev.gantry.ai
    description: 개발서버
  - url: https://user.gantry.ai
    description: 운영서버

tags:
  - name: users
    description: gantry 유저 정보 관리
paths:
  /users/{user_id}:
    get:
      summary: 유저 조회
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          required: true
          description: 유저정보조회
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: 사용자 정보 업데이트
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          required: true
          description: user_id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUser"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: 사용자 정보 삭제
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          required: true
          description: user_id
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
        user_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email_verified:
          type: boolean
    NewUser:
      type: object
      required:
        - user_name
        - password
        - email
      properties:
        user_name:
          type: string
        password:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string

    UpdateUser:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string

